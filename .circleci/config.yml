version: 2.1

jobs:
  test:
    docker:
      - image: cimg/python:3.12
    steps:
      - checkout
      - run:
          name: Set up virtual environment
          command: |
            python -m venv env
            . env/bin/activate
            pip install --upgrade pip
            pip install -r api-server-flask/requirements.txt || echo "No requirements.txt file found"
      - run:
          name: Run tests
          command: |
            . env/bin/activate
            pytest api-server-flask/

  build:
    docker:
      - image: cimg/python:3.12
    steps:
      - checkout
      - run:
          name: Set up virtual environment
          command: |
            python -m venv env
            . env/bin/activate
            pip install --upgrade pip
            pip install -r api-server-flask/requirements.txt || echo "No requirements.txt file found"
      - run:
          name: Build an artifact
          command: touch example.txt
      - store_artifacts:
          path: example.txt

  deploy:
    docker:
      - image: cimg/python:3.12
    steps:
      - checkout
      - run:
          name: Set up virtual environment
          command: |
            python -m venv env
            . env/bin/activate
            pip install --upgrade pip
            pip install -r api-server-flask/requirements.txt || echo "No requirements.txt file found"
      - run:
          name: Set up Flask environment variables
          working_directory: ~/api-server-flask  # Ensure correct directory
          environment:
            FLASK_APP: run.py
            FLASK_ENV: development
          command: echo "Environment variables set"
      - run:
          name: Start Flask server
          working_directory: ~/api-server-flask  # Ensure correct directory
          environment:
            FLASK_APP: run.py
            FLASK_ENV: development
          command: |
            . env/bin/activate
            flask run --host=0.0.0.0

workflows:
  example:
    jobs:
      - test
      - build:
          requires:
            - test
      - deploy:
          requires:
            - test
